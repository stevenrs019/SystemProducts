@model List<SystemProducts.Models.USUARIOS>

@{
    ViewBag.Title = "Usuarios";
}


<h2 class="text-primary mb-4"><i class="fa fa-users"></i> Lista de Usuarios</h2>

<p>
    <a href="@Url.Action("Create", "Usuarios")" class="btn btn-success">
        <i class="fa fa-plus"></i> Crear Nuevo Usuario
    </a>
</p>

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

<table id="tableUsers" class="table table-hover">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Correo</th>
            <th>Rol</th>
            <th>Estado</th>
            <th>Fecha de Registro</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.Nombre</td>
                    <td>@item.Apellido</td>
                    <td>@item.Correo</td>
                    <td>@item.Rol</td>
                    <td>@(item.Estado.HasValue ? (item.Estado.Value ? "Activo" : "Inactivo") : "Desconocido")</td>

                    <td>@(item.FechaRegistro.HasValue ? item.FechaRegistro.Value.ToString("dd/MM/yyyy") : "N/A")</td>
                    <td>
                        @Html.ActionLink("Editar", "Edit", new { id = item.IDUsuario }, new { @class = "btn btn-warning btn-sm" })
                        @Html.ActionLink("Detalles", "Details", new { id = item.IDUsuario }, new { @class = "btn btn-info btn-sm" })
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.IDUsuario }, new { @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" class="text-center">No hay usuarios registrados.</td>
            </tr>
        }
    </tbody>
</table>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Mostrar alerta de éxito
        var successMessage = '@TempData["SuccessMessage"]';
        if (successMessage) {
            Swal.fire({
                title: "Éxito",
                text: successMessage,
                icon: "success",
                confirmButtonText: "OK"
            });
        }

        // Mostrar alerta de error
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            Swal.fire({
                title: "Error",
                text: errorMessage,
                icon: "error",
                confirmButtonText: "OK"
            });
        }
    });
</script>

<script type="text/javascript">
    $('#tableUsers').DataTable({
        "responsive": true,
        "aServerSide": true,
        "autoWidth": false,
        "deferRender": true,
        "retrieve": true,
        "processing": true,
        "paging": true,
        "dom": 'Bfrtip',
        "buttons": [
            {
                extend: "csv",
                text: "Exportar CSV",
                exportOptions: {
                    columns: ':not(:last-child)' // Oculta la última columna (Acciones)
                }
            },
            {
                extend: "excel",
                text: "Exportar Excel",
                exportOptions: {
                    columns: ':not(:last-child)'
                }
            },
            {
                extend: "pdf",
                text: "Exportar PDF",
                exportOptions: {
                    columns: ':not(:last-child)'
                }
            }
        ],
        "language": {
            "sProcessing": "Procesando...",
            "sLengthMenu": "Mostrar _MENU_ registros",
            "sZeroRecords": "No se encontraron resultados",
            "sEmptyTable": "Ningún dato disponible en esta tabla",
            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_",
            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0",
            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
            "sInfoPostFix": "",
            "sSearch": "Buscar:",
            "sUrl": "",
            "sInfoThousands": ",",
            "sLoadingRecords": "Cargando...",
            "oPaginate": {
                "sFirst": "Primero",
                "sLast": "Último",
                "sNext": "Siguiente",
                "sPrevious": "Anterior"
            },
            "oAria": {
                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
            }
        }
    });
</script>

